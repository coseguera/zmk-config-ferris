#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};
&lt {
    quick-tap-ms = <200>;
};
&mmv {
    time-to-max-speed-ms = <50>;
    acceleration-exponent=<2>;
};
&mwh {
    time-to-max-speed-ms = <50>;
    acceleration-exponent=<1>;
};

/ {
    ht: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAP";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
    };
};



/ { 

    combos {
        compatible = "zmk,combos";
        combo_grave {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp GRAVE>;
        };
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };
        
         combo_minus {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp MINUS>;
        };
        
         combo_under {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp UNDER>;
        };
        
         combo_plus {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp PLUS>;
        };
        
         combo_equal {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp EQUAL>;
        };
        
         combo_dqt {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp DQT>;
        };
        
         combo_sqt {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp SQT>;
        };
        
         combo_bslh {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp BSLH>;
        };
        
         combo_del {
            timeout-ms = <50>;
            key-positions = <26 33>;
            bindings = <&kp DEL>;
        };
        
    };

    macros {
        ZMK_MACRO(bkts_macro,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        )
        ZMK_MACRO(brcs_macro,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        )
    };

        keymap {
                compatible = "zmk,keymap";
                
        default_layer {
            bindings = <
    &kp Q        &kp W       &kp E   &kp R       &kp T                  &kp Y       &kp U      &kp I          &kp O       &kp P
    &mt LALT A   &mt LCTRL S &lt 2 D &mt LGUI F  &kp G                  &kp H       &mt LGUI J &lt 3 K        &mt LCTRL L &mt LALT SEMI
    &ht LSHIFT Z &kp X       &kp C   &kp V       &kp B                  &kp N       &kp M      &kp COMMA      &kp DOT     &ht RSHIFT SLASH
                                    &bkts_macro &kp ENTER               &lt 1 SPACE &kp BSPC
            >;
        };

        first_layer {
            bindings = <
    &kp N1        &kp N2       &kp N3     &kp N4        &kp N5                  &kp N6    &kp N7        &kp N8      &kp N9         &kp N0
    &mt LALT EXCL &mt LCTRL AT &lt 2 HASH &mt LGUI DLLR &kp PRCNT               &kp CARET &mt LGUI AMPS &lt 3 ASTRK &mt LCTRL LPAR &mt LALT RPAR
    &kp LBKT      &kp RBKT     &kp LBRC   &kp RBRC      &none                   &kp LEFT  &kp DOWN      &kp UP      &kp RIGHT      &kp SLASH
                                        &brcs_macro   &trans                    &trans    &trans
            >;
        };

        second_layer {
            bindings = <
    &bt BT_SEL 0      &bt BT_SEL 1       &none       &bt BT_SEL 2 &bt BT_SEL 3               &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_DOWN &none
    &mt LALT C_BRI_DN &mt LCTRL C_BRI_UP &trans      &kp LGUI     &bt BT_SEL 4               &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT  &none
    &none             &none              &bt BT_CLR  &mkp MCLK    &none                      &kp HOME         &kp PG_DN        &kp PG_UP      &kp END          &none 
                                                     &mkp RCLK    &mkp LCLK                  &mkp LCLK        &mkp RCLK
            >;
        };

        third_layer {
            bindings = <
    &kp F1      &kp F2       &kp F3   &kp F4          &kp F5                        &none             &none                   &none  &none     &none
    &mt LALT F6 &mt LCTRL F7 &lt 2 F8 &mt LGUI F9     &kp F10                       &mt C_MUTE K_MUTE &mt LGUI C_PP           &trans &kp LCTRL &kp LALT
    &none       &none        &none    &kp F11         &kp F12                       &none             &mt LC(LS(M)) LG(LS(M)) &none  &none     &none 
                                    &mt C_RW C_PREV &mt C_FF C_NEXT                 &kp C_VOL_DN      &kp C_VOL_UP
            >;
        };
	};
};
